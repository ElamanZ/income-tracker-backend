// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(uuid())
  firstName         String        @map("first_name")
  lastName          String        @map("last_name")
  phone             String        @unique
  encryptedPassword String        @map("encrypted_password")
  avatarUrl         String?       @map("avatar_url")
  updatedAt         DateTime      @default(now()) @updatedAt @map("updated_at")
  createdAt         DateTime      @default(now()) @map("created_at")
  transactions      Transaction[]
  categories        Category[]
  sessions          Session[]

  @@map("users")
}

model Session {
  id                 String   @id @default(uuid())
  userId             String   @map("user_id")
  hashedRefreshToken String   @unique
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @default(now()) @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
}

model Transaction {
  id         String   @id @default(cuid())
  comment    String?  @map("comment")
  isIncome   Boolean  @map("is_income")
  amount     Float    @map("amount")
  date       DateTime @map("date")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")
  userId     String   @map("user_id")
  categoryId String   @map("category_id")
  user       User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id           String        @id @default(cuid())
  name         String        @map("name")
  isIncome     Boolean       @map("is_income")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @default(now()) @map("updated_at")
  userId       String        @map("user_id")
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("categories")
}
